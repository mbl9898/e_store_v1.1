[{"E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\index.tsx":"1","E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\App.tsx":"2","E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\contexts.ts":"3","E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\Admin\\Admin.tsx":"4","E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\Home\\Home.tsx":"5","E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\data.ts":"6","E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\Admin\\UpdateStockModal.tsx":"7","E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\Admin\\AddCategoryModal.tsx":"8","E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\Sorting\\SortingV2.0.tsx":"9","E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\Admin\\AddProductModal.tsx":"10","E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\Shared Components\\WelcomeEventPane.tsx":"11","E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\Shared Components\\SaleEventCarouselAndCategories.tsx":"12","E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\Shared Components\\ProductsGrid.tsx":"13","E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\Shared Components\\ProductsCarousel.tsx":"14","E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\Shared Components\\HomeCarousel.tsx":"15","E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\Shared Components\\Navbar.tsx":"16","E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\Shared Components\\Footer.tsx":"17","E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\Shared Components\\CategoriesMenu.tsx":"18","E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\Product\\Product.tsx":"19","E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\Shared Components\\ProductsCarousel1.tsx":"20"},{"size":219,"mtime":1609867357549,"results":"21","hashOfConfig":"22"},{"size":5592,"mtime":1609942539993,"results":"23","hashOfConfig":"22"},{"size":280,"mtime":1609872393199,"results":"24","hashOfConfig":"22"},{"size":21587,"mtime":1609956251058,"results":"25","hashOfConfig":"22"},{"size":2549,"mtime":1609941714943,"results":"26","hashOfConfig":"22"},{"size":14749,"mtime":1609870749433,"results":"27","hashOfConfig":"22"},{"size":2585,"mtime":1609926220208,"results":"28","hashOfConfig":"22"},{"size":3674,"mtime":1609926485127,"results":"29","hashOfConfig":"22"},{"size":9000,"mtime":1609941550767,"results":"30","hashOfConfig":"22"},{"size":7212,"mtime":1609928016455,"results":"31","hashOfConfig":"22"},{"size":426,"mtime":1609937904880,"results":"32","hashOfConfig":"22"},{"size":1299,"mtime":1609941178848,"results":"33","hashOfConfig":"22"},{"size":2915,"mtime":1609941546347,"results":"34","hashOfConfig":"22"},{"size":4376,"mtime":1609956089688,"results":"35","hashOfConfig":"22"},{"size":683,"mtime":1609942232571,"results":"36","hashOfConfig":"22"},{"size":8617,"mtime":1609941753894,"results":"37","hashOfConfig":"22"},{"size":551,"mtime":1609937904775,"results":"38","hashOfConfig":"22"},{"size":4238,"mtime":1609942594159,"results":"39","hashOfConfig":"22"},{"size":1182,"mtime":1609937800877,"results":"40","hashOfConfig":"22"},{"size":876,"mtime":1609941046529,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"147bc2i",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},"E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\index.tsx",[],["88","89"],"E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\App.tsx",[],"E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\contexts.ts",[],"E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\Admin\\Admin.tsx",["90","91"],"import React, { useState } from \"react\";\r\n\r\nimport AddCategoryModal from \"./AddCategoryModal\";\r\nimport AddProductModal from \"./AddProductModal\";\r\nimport UpdateStockModal from \"./UpdateStockModal\";\r\nimport axios from \"axios\";\r\nimport { DBProducts, DBCategories } from \"../interfaces\";\r\n\r\nconst Admin: React.FC = () => {\r\n  const [DBBrands, setDBBrands] = useState<[]>([]);\r\n  const [DBCategories, setDBCategories] = useState<DBCategories[]>([]);\r\n  const [subCategories, setSubCategories] = useState<[]>([]);\r\n  const [isOpen, setIsOpen] = useState<string>(\"\");\r\n  const [isDiscountPriceValid, setIsDiscountPriceValid] = useState<\r\n    null | boolean\r\n  >(null);\r\n\r\n  const [productData, setProductData] = useState<DBProducts>({\r\n    productName: \"\",\r\n    brandId: \"\",\r\n    productImageURL: \"\",\r\n    price: NaN,\r\n    discountPrice: NaN,\r\n    discountPercentage: \"\",\r\n    sku: \"\",\r\n    quantity: NaN,\r\n    categoryId: \"\",\r\n    productDescription: \"\",\r\n    productReviews: \"\",\r\n  });\r\n\r\n  const [categoryData, setCategoryData] = useState<{\r\n    categoryName: string;\r\n    categoryImageURL: string;\r\n    subCategories: never[];\r\n  }>({\r\n    categoryName: \"\",\r\n    categoryImageURL: \"\",\r\n    subCategories: [],\r\n  });\r\n\r\n  const [updateStockData, setUpdateStockData] = useState<{\r\n    productName: string;\r\n    stockQuantity: string;\r\n  }>({\r\n    productName: \"\",\r\n    stockQuantity: \"\",\r\n  });\r\n\r\n  const [brandData, setBrandData] = useState<{\r\n    brandName: string;\r\n    brandCategory: string;\r\n  }>({\r\n    brandName: \"\",\r\n    brandCategory: \"\",\r\n  });\r\n\r\n  const setPercentage: () => void = () => {\r\n    if (+productData.price! && +productData.discountPrice!) {\r\n      setProductData((prevData) => {\r\n        return {\r\n          ...prevData,\r\n          discountPercentage: `${\r\n            ((productData.price! - productData.discountPrice!) /\r\n              productData.price!) *\r\n            100\r\n          }%`,\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  const setDiscountPrice: () => void = () => {\r\n    let discountPercentage = productData.discountPercentage\r\n      .toString()\r\n      .replace(\"%\", \"\");\r\n    const calculateDiscountPrice = `${\r\n      productData.price! - productData.price! * (+discountPercentage / 100)\r\n    }`;\r\n\r\n    if (\r\n      +calculateDiscountPrice < productData.price! &&\r\n      +calculateDiscountPrice > 0\r\n    ) {\r\n      setIsDiscountPriceValid(true);\r\n    }\r\n\r\n    if (\r\n      +calculateDiscountPrice > productData.price! ||\r\n      +calculateDiscountPrice < 0\r\n    ) {\r\n      return;\r\n    }\r\n    if (+productData.price! && productData.discountPercentage) {\r\n      setProductData((prevData: any) => {\r\n        return {\r\n          ...prevData,\r\n          discountPrice: calculateDiscountPrice,\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange: (e: any) => void = (e) => {\r\n    const { name, value } = e.target;\r\n    console.log(name, value);\r\n    if (isOpen === \"addProduct\") {\r\n      if (name === \"discountPrice\") {\r\n        console.log(productData.price, value);\r\n        if (+productData.price! > +value && +value > 0) {\r\n          console.log(\"discount price valid\");\r\n          setIsDiscountPriceValid(true);\r\n          setProductData((prevData) => ({ ...prevData, [name]: value }));\r\n          console.log(productData);\r\n        }\r\n        if (+productData.price! < +value || +value < 0) {\r\n          console.log(\"discount price invalid\");\r\n          setIsDiscountPriceValid(false);\r\n          return;\r\n        }\r\n      }\r\n      setProductData((prevData) => ({ ...prevData, [name]: value }));\r\n      console.log(productData);\r\n    }\r\n    if (isOpen === \"addCategory\") {\r\n      setCategoryData((prevData) => ({ ...prevData, [name]: value }));\r\n      console.log(categoryData);\r\n    }\r\n    if (isOpen === \"updateStock\") {\r\n      setUpdateStockData((prevData) => ({ ...prevData, [name]: value }));\r\n      console.log(updateStockData);\r\n    }\r\n    if (isOpen === \"addBrand\") {\r\n      setBrandData((prevData) => ({ ...prevData, [name]: value }));\r\n      console.log(brandData);\r\n    }\r\n  };\r\n\r\n  const addProduct: () => Promise<void> = async () => {\r\n    try {\r\n      await axios.post(\"http://localhost:3001/api/products\", productData);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const addCategories: () => Promise<void> = async () => {\r\n    try {\r\n      await axios.post(\"http://localhost:3001/api/categories\", categoryData);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const updateStock: () => Promise<void> = async () => {\r\n    try {\r\n      await axios.post(\"http://localhost:3001/api/stocks\", updateStockData);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const addBrand: () => Promise<void> = async () => {\r\n    try {\r\n      await axios.post(\"http://localhost:3001/api/brands\", brandData);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const getBrands: () => Promise<void> = async () => {\r\n    try {\r\n      const res = await axios.get(\"http://localhost:3001/api/brands\");\r\n      setDBBrands(res.data);\r\n      console.log(res.data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const getCategories: () => Promise<void> = async () => {\r\n    try {\r\n      const res = await axios.get(\"http://localhost:3001/api/categories\");\r\n      setDBCategories(res.data);\r\n      console.log(res.data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin\">\r\n      <div className=\"adminInner\">\r\n        <AddProductModal\r\n          getBrands={getBrands}\r\n          getCategories={getCategories}\r\n          isOpen={isOpen}\r\n          setIsOpen={setIsOpen}\r\n          handleChange={handleChange}\r\n          DBBrands={DBBrands}\r\n          productData={productData}\r\n          isDiscountPriceValid={isDiscountPriceValid}\r\n          setPercentage={setPercentage}\r\n          setDiscountPrice={setDiscountPrice}\r\n          DBCategories={DBCategories}\r\n          addProduct={addProduct}\r\n        />\r\n        <AddCategoryModal\r\n          isOpen={isOpen}\r\n          setIsOpen={setIsOpen}\r\n          handleChange={handleChange}\r\n          addCategories={addCategories}\r\n        />\r\n        <UpdateStockModal\r\n          isOpen={isOpen}\r\n          setIsOpen={setIsOpen}\r\n          handleChange={handleChange}\r\n          updateStock={updateStock}\r\n        />\r\n        <div>\r\n          {/* <div className=\"addProducts card1\">\r\n          <h3>Add Product</h3>\r\n          {/* Button trigger modal  */}\r\n          {/* <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            data-toggle=\"modal\"\r\n            data-target=\"#exampleModal\"\r\n            onClick={() => {\r\n              getBrands();\r\n              getCategories();\r\n              setIsOpen(\"addProduct\");\r\n              console.log(isOpen);\r\n            }}\r\n          >\r\n            Add\r\n          </button> */}\r\n          {/* Modal  */}\r\n          {/* <div\r\n            className=\"modal fade\"\r\n            id=\"exampleModal\"\r\n            tabIndex=\"-1\"\r\n            aria-labelledby=\"exampleModalLabel\"\r\n            aria-hidden=\"true\"\r\n          >\r\n            <div className=\"modal-dialog\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                    Add Product\r\n                  </h5>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"close\"\r\n                    data-dismiss=\"modal\"\r\n                    aria-label=\"Close\"\r\n                  >\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                  </button>\r\n                </div>\r\n                <div className=\"modal-body \">\r\n                  <label>Product Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"productName\"\r\n                    // placeholder=\"Product name\"\r\n                    autoComplete=\"off\"\r\n                    onChange={handleChange}\r\n                    required\r\n                  />\r\n                  <label>Brand Name</label>\r\n                  <select\r\n                    name=\"brandId\"\r\n                    onChange={handleChange}\r\n                    // defaultValue={\"Select Brand Name\"}\r\n                  >\r\n                    <option disabled selected>\r\n                      Select Brand Name\r\n                    </option>\r\n                    {DBBrands.map((brand) => {\r\n                      return (\r\n                        <option value={brand._id} key={brand._id}>\r\n                          {brand.brandName}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                  <label>Product Image URL</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"productImageURL\"\r\n                    // placeholder=\"Product Image Link\"\r\n                    autoComplete=\"off\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <label>Price</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"price\"\r\n                    placeholder=\"Price\"\r\n                    autoComplete=\"off\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <label>Discount Price</label>\r\n                  <div className=\"inputWithBtn\">\r\n                    <input\r\n                      className={\r\n                        !productData.discountPrice\r\n                          ? \"\"\r\n                          : isDiscountPriceValid\r\n                          ? \"valid\"\r\n                          : \"invalid\"\r\n                      }\r\n                      type=\"text\"\r\n                      name=\"discountPrice\"\r\n                      // placeholder=\"Discount Price\"\r\n                      autoComplete=\"off\"\r\n                      value={productData.discountPrice}\r\n                      onChange={handleChange}\r\n                    />\r\n                    <button className=\"btn btn-primary\" onClick={setPercentage}>\r\n                      Calc%\r\n                    </button>\r\n                  </div>\r\n                  <label>Discount Percentage</label>\r\n                  <div className=\"inputWithBtn\">\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"discountPercentage\"\r\n                      value={productData.discountPercentage}\r\n                      // placeholder=\"Discount Percentage\"\r\n                      autoComplete=\"off\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    <button\r\n                      className=\"btn btn-primary\"\r\n                      onClick={setDiscountPrice}\r\n                    >\r\n                      calcDiscPrice\r\n                    </button>\r\n                  </div>\r\n                  <label>SKU</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"sku\"\r\n                    // placeholder=\"SKU\"\r\n                    autoComplete=\"off\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <label>Stock Quantity</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"quantity\"\r\n                    // placeholder=\"Stock Quantity\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <label>Product Category</label>\r\n                  <select name=\"categoryId\" onChange={handleChange}>\r\n                    <option disabled selected>\r\n                      Select Product Category\r\n                    </option>\r\n                    {DBCategories.map((category) => {\r\n                      return (\r\n                        <option value={category._id} key={category._id}>\r\n                          {category.categoryName}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                  <label>Product Description</label>\r\n                  <textarea\r\n                    name=\"productDescription\"\r\n                    cols=\"30\"\r\n                    rows=\"10\"\r\n                    onChange={handleChange}\r\n                  ></textarea>\r\n                  <button\r\n                    className=\"btn btn-primary\"\r\n                    data-dismiss=\"modal\"\r\n                    onClick={addProduct}\r\n                  >\r\n                    Add Product\r\n                  </button>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secondary\"\r\n                    data-dismiss=\"modal\"\r\n                  >\r\n                    Close\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div> */}\r\n        </div>\r\n        <div>\r\n          {/* <div className=\"addCategory card1\">\r\n            <h3>Add Category</h3>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              data-toggle=\"modal\"\r\n              data-target=\"#exampleModal1\"\r\n              onClick={() => {\r\n                setIsOpen(\"addCategory\");\r\n                console.log(isOpen);\r\n              }}\r\n            >\r\n              Add\r\n            </button> */}\r\n\r\n          {/* Modal  */}\r\n          {/* <div\r\n              className=\"modal fade\"\r\n              id=\"exampleModal1\"\r\n              tabIndex=\"-1\"\r\n              aria-labelledby=\"exampleModalLabel\"\r\n              aria-hidden=\"true\"\r\n            >\r\n              <div className=\"modal-dialog\">\r\n                <div className=\"modal-content\">\r\n                  <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                      Add Category\r\n                    </h5>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"close\"\r\n                      data-dismiss=\"modal\"\r\n                      aria-label=\"Close\"\r\n                    >\r\n                      <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"modal-body \">\r\n                    <input\r\n                      // uuid={uuid()}\r\n                      type=\"text\"\r\n                      name=\"categoryName\"\r\n                      onChange={handleChange}\r\n                      placeholder={\"Category Name\"}\r\n                      // errorMessage={\"Category Name is required\"}\r\n                    />\r\n                    <input\r\n                      // uuid={uuid()}\r\n                      type=\"url\"\r\n                      name=\"categoryImageURL\"\r\n                      placeholder=\"Category Image URL\"\r\n                      onChange={handleChange}\r\n                      // errorMessage={\"Category Image URL is required\"}\r\n                    /> */}\r\n          {/* <input\r\n                    type=\"text\"\r\n                    name=\"subCategories\"\r\n                    placeholder=\"Sub-Categories Name\"\r\n                    onChange={handleChange}\r\n                  /> */}\r\n          {/* <div className=\"subCategoriesMain\">\r\n                      <span>\r\n                        Some Data <button>x</button>\r\n                      </span>\r\n                      <span>Some Data</span>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"subCategories\"\r\n                        placeholder=\"Sub-Categories Name\"\r\n                        onKeyPress={(e) => {\r\n                          // console.log(e.key);\r\n                          if (e.key === \"Enter\") {\r\n                            console.log(\"Enter Pressed\");\r\n                          }\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <button\r\n                      className=\"btn btn-primary\"\r\n                      data-dismiss=\"modal\"\r\n                      onClick={addCategories}\r\n                    >\r\n                      Add Category\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"modal-footer\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-secondary\"\r\n                      data-dismiss=\"modal\"\r\n                    >\r\n                      Close\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div> */}\r\n        </div>\r\n        <div>\r\n          <div className=\"updateStock card1\">\r\n            <h3>Update Stock</h3>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              data-toggle=\"modal\"\r\n              data-target=\"#exampleModal2\"\r\n              onClick={() => {\r\n                setIsOpen(\"updateStock\");\r\n                console.log(isOpen);\r\n              }}\r\n            >\r\n              Update\r\n            </button>\r\n\r\n            {/* Modal  */}\r\n            <div\r\n              className=\"modal fade\"\r\n              id=\"exampleModal2\"\r\n              tabIndex={-1}\r\n              aria-labelledby=\"exampleModalLabel\"\r\n              aria-hidden=\"true\"\r\n            >\r\n              <div className=\"modal-dialog\">\r\n                <div className=\"modal-content\">\r\n                  <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                      Update Stock\r\n                    </h5>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"close\"\r\n                      data-dismiss=\"modal\"\r\n                      aria-label=\"Close\"\r\n                    >\r\n                      <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"modal-body \">\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"productName\"\r\n                      placeholder=\"Product Name\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"stockQuantity\"\r\n                      placeholder=\"Stock Quantity\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    <button\r\n                      className=\"btn btn-primary\"\r\n                      onClick={updateStock}\r\n                      data-dismiss=\"modal\"\r\n                    >\r\n                      Update Stock\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"modal-footer\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-secondary\"\r\n                      data-dismiss=\"modal\"\r\n                    >\r\n                      Close\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"addBrand card1\">\r\n          <h3>Add Brand</h3>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            data-toggle=\"modal\"\r\n            data-target=\"#exampleModal3\"\r\n            onClick={() => {\r\n              setIsOpen(\"addBrand\");\r\n              console.log(isOpen);\r\n            }}\r\n          >\r\n            Add\r\n          </button>\r\n\r\n          {/* Modal  */}\r\n          <div\r\n            className=\"modal fade\"\r\n            id=\"exampleModal3\"\r\n            tabIndex={-1}\r\n            aria-labelledby=\"exampleModalLabel\"\r\n            aria-hidden=\"true\"\r\n          >\r\n            <div className=\"modal-dialog\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                    Add Brand\r\n                  </h5>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"close\"\r\n                    data-dismiss=\"modal\"\r\n                    aria-label=\"Close\"\r\n                  >\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                  </button>\r\n                </div>\r\n                <div className=\"modal-body \">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"brandName\"\r\n                    placeholder=\"Brand Name\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"brandCategory\"\r\n                    placeholder=\"Brand Category\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <button\r\n                    className=\"btn btn-primary\"\r\n                    data-dismiss=\"modal\"\r\n                    onClick={addBrand}\r\n                  >\r\n                    Add Brand\r\n                  </button>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secondary\"\r\n                    data-dismiss=\"modal\"\r\n                  >\r\n                    Close\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\Home\\Home.tsx",[],"E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\data.ts",[],"E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\Admin\\UpdateStockModal.tsx",[],"E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\Admin\\AddCategoryModal.tsx",[],"E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\Sorting\\SortingV2.0.tsx",["92","93","94","95"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport ProductsGrid from \"../Shared Components/ProductsGrid\";\r\n// import { viewedRelatedProductsData } from \"../data\";\r\nimport { DBProductsContext, DBCategoriesContext } from \"../contexts\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport { DBProducts, DBCategories } from \"../interfaces\";\r\n\r\ninterface Props {\r\n  isProductsBtnClicked: undefined | boolean;\r\n  setIsProductsBtnClicked: React.Dispatch<\r\n    React.SetStateAction<undefined | boolean>\r\n  >;\r\n  isBackDropDisplay: boolean;\r\n  setIsBackDropDisplay: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setIsCategoriesMenuMainOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setIsBodyOverflowYDisplay: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nconst Sorting: React.FC<Props> = ({\r\n  isProductsBtnClicked,\r\n  setIsProductsBtnClicked,\r\n  isBackDropDisplay,\r\n  setIsBackDropDisplay,\r\n  setIsCategoriesMenuMainOpen,\r\n  setIsBodyOverflowYDisplay,\r\n}) => {\r\n  const [currentCategory, setCurrentCategory] = useState<{} | any>({});\r\n  let brandIds: { brandIdsArr: [] } = {\r\n    brandIdsArr: [],\r\n  };\r\n  const [brandsForSort, setBrandsForSort] = useState<null>(null);\r\n  const DBCategories = useContext<[] | DBCategories[]>(DBCategoriesContext);\r\n  const DBProducts = useContext<[] | DBProducts[]>(DBProductsContext);\r\n  const { categoryName } = useParams<{ categoryName: string }>();\r\n  console.log(categoryName);\r\n  const getCurrentCategory: () => void = async () => {\r\n    try {\r\n      const res = await Axios.get(\r\n        `http://localhost:3001/api/categories/${categoryName}`\r\n      );\r\n      setCurrentCategory(res.data);\r\n      console.log(res);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const filterCurrentCategory: () => void = () => {\r\n    try {\r\n      console.log(categoryName, DBCategories);\r\n      const res = DBCategories.filter((category) => {\r\n        return category.categoryName === categoryName;\r\n      });\r\n      setCurrentCategory(res[0]);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (DBCategories.length === 0) {\r\n      getCurrentCategory();\r\n    } else filterCurrentCategory();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"sorting\">\r\n      <div\r\n        className=\"backDrop\"\r\n        onClick={() => {\r\n          setIsProductsBtnClicked(isProductsBtnClicked ? false : undefined);\r\n          setIsCategoriesMenuMainOpen(false);\r\n          setIsBackDropDisplay(!isBackDropDisplay);\r\n          setIsBodyOverflowYDisplay(\"auto\");\r\n        }}\r\n        style={{ display: isBackDropDisplay ? \"initial\" : \"none\" }}\r\n      ></div>\r\n      <div className=\"categoryPath\">\r\n        <ul>\r\n          <li>E-store</li>\r\n          <svg\r\n            width=\"15px\"\r\n            height=\"15px\"\r\n            viewBox=\"0 0 192 512\"\r\n            className=\"caretRightSvg\"\r\n          >\r\n            <path\r\n              fill=\"#0046be\"\r\n              d=\"M0 384.662V127.338c0-17.818 21.543-26.741 34.142-14.142l128.662 128.662c7.81 7.81 7.81 20.474 0 28.284L34.142 398.804C21.543 411.404 0 402.48 0 384.662z\"\r\n            ></path>\r\n          </svg>\r\n          <li>All Categories</li>\r\n          <svg\r\n            width=\"15px\"\r\n            height=\"15px\"\r\n            viewBox=\"0 0 192 512\"\r\n            className=\"caretRightSvg\"\r\n          >\r\n            <path\r\n              fill=\"#0046be\"\r\n              d=\"M0 384.662V127.338c0-17.818 21.543-26.741 34.142-14.142l128.662 128.662c7.81 7.81 7.81 20.474 0 28.284L34.142 398.804C21.543 411.404 0 402.48 0 384.662z\"\r\n            ></path>\r\n          </svg>\r\n          <li>{currentCategory ? currentCategory.categoryName : \"\"}</li>\r\n        </ul>\r\n        <h3>{currentCategory ? currentCategory.categoryName : \"\"}</h3>\r\n      </div>\r\n      <div className=\"sortingPane\">\r\n        <div className=\"filtersPane\">\r\n          <div className=\"category\">\r\n            <h5>Category</h5>\r\n            <h6>{currentCategory ? currentCategory.categoryName : \"\"}</h6>\r\n            <a href=\"/\">\r\n              <label>\r\n                {\" \"}\r\n                {currentCategory ? currentCategory.subCategoryName : \"\"}{\" \"}\r\n              </label>\r\n            </a>\r\n            <a href=\"/\">\r\n              <label>flat screen tvs</label>\r\n            </a>\r\n            <a href=\"/\">\r\n              <label>flat screen tvs</label>\r\n            </a>\r\n            <a href=\"/\">\r\n              <label>flat screen tvs</label>\r\n            </a>\r\n            <a href=\"/\">\r\n              <label>flat screen tvs</label>\r\n            </a>\r\n            <a href=\"/\">\r\n              <label>flat screen tvs</label>\r\n            </a>\r\n            <a href=\"/\">\r\n              <label>flat screen tvs</label>\r\n            </a>\r\n          </div>\r\n          <div className=\"brand\">\r\n            <h5>Brand</h5>\r\n            <div>\r\n              <input type=\"checkbox\" />\r\n              <label>Samsung</label>\r\n            </div>\r\n            <div>\r\n              <input type=\"checkbox\" />\r\n              <label>Samsung</label>\r\n            </div>\r\n            <div>\r\n              <input type=\"checkbox\" />\r\n              <label>Samsung</label>\r\n            </div>\r\n            <div>\r\n              <input type=\"checkbox\" />\r\n              <label>Samsung</label>\r\n            </div>\r\n            <div>\r\n              <input type=\"checkbox\" />\r\n              <label>Samsung</label>\r\n            </div>\r\n          </div>\r\n          <div className=\"price\">\r\n            <h5>Price</h5>\r\n            <div>\r\n              <input type=\"checkbox\" />\r\n              <label>10000-15000</label>\r\n            </div>\r\n            <div>\r\n              <input type=\"checkbox\" />\r\n              <label>10000-15000</label>\r\n            </div>\r\n            <div>\r\n              <input type=\"checkbox\" />\r\n              <label>10000-15000</label>\r\n            </div>\r\n            <div>\r\n              <input type=\"checkbox\" />\r\n              <label>10000-15000</label>\r\n            </div>\r\n            <div>\r\n              <input type=\"checkbox\" />\r\n              <label>10000-15000</label>\r\n            </div>\r\n            <div>\r\n              <input type=\"checkbox\" />\r\n              <label>10000-15000</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"productsDisplay\">\r\n          <div className=\"saleBanner\">\r\n            <div className=\"saleBannerInner\">\r\n              <div className=\"saleBannerContent\">\r\n                <div className=\"saleBannerContentInner\">\r\n                  <div className=\"bannerHeading\">\r\n                    <h1>Our Coolest Deals</h1>\r\n                    <h1 className=\"saleH1\">Sale.</h1>\r\n                  </div>\r\n                  <h3>Ends Sunday</h3>\r\n                  <h2>Looking for Black Friday Deals available now</h2>\r\n                </div>\r\n              </div>\r\n              <div className=\"bannerShopNow\">\r\n                <p>Limited quantities.</p>\r\n                <button>Shop Now</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <ProductsGrid\r\n            // gridCategoryData={viewedRelatedProductsData}\r\n            DBProducts={DBProducts}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sorting;\r\n\r\n// let dbProducts = DBProducts;\r\n// let dbCategories = DBCategories;\r\n// // console.log(DBProducts);\r\n\r\n// const reqBrands = () => {\r\n//   Axios.post(`http://localhost:3001/api/brands/ids`, brandIds);\r\n//   // setBrandsForSort(res.data);\r\n//   // console.log(res.data);\r\n// };\r\n\r\n// const getBrands = () => {\r\n//   try {\r\n//     const brandsIds = [];\r\n//     dbProducts.forEach((product) => {\r\n//       brandsIds.push(product.brandId);\r\n//     });\r\n//     brandIds = {\r\n//       brandIdsArr: [...brandsIds],\r\n//     };\r\n//     reqBrands();\r\n//   } catch (err) {\r\n//     console.log(err);\r\n//   }\r\n//   // console.log(brandsIds);\r\n// };\r\n\r\n// const getProducts = async () => {\r\n//   const res = await Axios.get(\"http://localhost:3001/api/products\");\r\n//   dbProducts = res.data;\r\n// };\r\n\r\n// const getCategories = async () => {\r\n//   const res = await Axios.get(\"http://localhost:3001/api/categories\");\r\n//   dbCategories = res.data;\r\n//   console.log(res.data, dbCategories, \"HJ\");\r\n//   return res.data;\r\n// };\r\n\r\n// useEffect(() => {\r\n//   setTimeout(() => {\r\n//     console.log(dbCategories, \"erfuiref\");\r\n//     if (!dbCategories.length) {\r\n//       const fetchCategories = async () => {\r\n//         await getCategories();\r\n\r\n//         console.log(dbCategories, \"jhgjhg\");\r\n//         getCategory();\r\n//       };\r\n//       fetchCategories();\r\n//     } else {\r\n//       getCategory();\r\n//     }\r\n\r\n//     if (!dbProducts.length) {\r\n//       const fetchProducts = async () => {\r\n//         await getProducts();\r\n\r\n//         console.log(dbProducts, \"dbProducts\");\r\n//         getBrands();\r\n//       };\r\n//       fetchProducts();\r\n//     } else {\r\n//       getBrands();\r\n//     }\r\n//   }, 2000);\r\n// }, []);\r\n","E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\Admin\\AddProductModal.tsx",[],"E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\Shared Components\\WelcomeEventPane.tsx",[],"E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\Shared Components\\SaleEventCarouselAndCategories.tsx",[],"E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\Shared Components\\ProductsGrid.tsx",[],"E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\Shared Components\\ProductsCarousel.tsx",["96","97","98","99","100","101"],"import React, { useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// import ItemsCarousel from \"react-items-carousel\";\r\nimport { DBProductsContext } from \"../contexts\";\r\nimport { DBProducts } from \"../interfaces\";\r\n\r\nconst ProductsCarousel: React.FC = () => {\r\n  const [activeItemIndex, setActiveItemIndex] = useState<number>(0);\r\n  const DBProducts: DBProducts[] = useContext<[] | DBProducts[]>(\r\n    DBProductsContext\r\n  );\r\n  const chevronWidth = 40;\r\n  const chevron = (\r\n    <button style={{ backgroundColor: \"transparent\" }}>\r\n      <svg\r\n        width=\"40px\"\r\n        height=\"40px\"\r\n        viewBox=\"0 0 512 512\"\r\n        className=\"arrowCircleIcon\"\r\n      >\r\n        <path\r\n          fill=\"#0046be\"\r\n          d=\"M504 256C504 119 393 8 256 8S8 119 8 256s111 248 248 248 248-111 248-248zm-448 0c0-110.5 89.5-200 200-200s200 89.5 200 200-89.5 200-200 200S56 366.5 56 256zm189.1 129.9L123.7 264.5c-4.7-4.7-4.7-12.3 0-17l121.4-121.4c4.7-4.7 12.3-4.7 17 0l19.6 19.6c4.8 4.8 4.7 12.5-.2 17.2L211.2 230H372c6.6 0 12 5.4 12 12v28c0 6.6-5.4 12-12 12H211.2l70.3 67.1c4.9 4.7 5 12.4.2 17.2l-19.6 19.6c-4.7 4.7-12.3 4.7-17 0z\"\r\n        ></path>\r\n      </svg>\r\n    </button>\r\n  );\r\n\r\n  return (\r\n    <h1>PRODUCT CAROUSEL</h1>\r\n    //   <div style={{ padding: `0 ${chevronWidth}px` }}>\r\n    //     <ItemsCarousel\r\n    //       requestToChangeActive={setActiveItemIndex}\r\n    //       activeItemIndex={activeItemIndex}\r\n    //       // numberOfCards={DBProducts.length > 5 ? 5 : +DBProducts.length}\r\n    //       numberOfCards={4}\r\n    //       gutter={2}\r\n    //       leftChevron={chevron}\r\n    //       rightChevron={chevron}\r\n    //       outsideChevron\r\n    //       chevronWidth={chevronWidth}\r\n    //       infiniteLoop={true}\r\n    //       slidesToScroll={2}\r\n    //       showSlither={true}\r\n    //       activePosition={\"center\"}\r\n    //     >\r\n    //       {DBProducts.map(\r\n    //         ({\r\n    //           _id,\r\n    //           productName,\r\n    //           productImageURL,\r\n    //           price,\r\n    //           discountPrice,\r\n    //           discountPercentage,\r\n    //         }: DBProducts) => {\r\n    //           return (\r\n    //             <Link to={`/products`} key={_id}>\r\n    //               <div className=\"productCarouselCard\">\r\n    //                 <div className=\"cardImgHolder\">\r\n    //                   <img src={productImageURL} alt={productName} />\r\n    //                 </div>\r\n    //                 <h6>{productName}</h6>\r\n    //                 <div className=\"productDiscountedPriceDiv\">\r\n    //                   {discountPrice ? (\r\n    //                     <p className=\"productDiscountedPrice\">\r\n    //                       Rs. {discountPrice}\r\n    //                     </p>\r\n    //                   ) : (\r\n    //                     \"\"\r\n    //                   )}\r\n    //                   {discountPercentage && discountPrice ? (\r\n    //                     <span>\r\n    //                       {\" \"}\r\n    //                       -\r\n    //                       {Math.ceil(\r\n    //                         discountPercentage.toString().replace(\"%\", \"\")\r\n    //                       )}\r\n    //                       %\r\n    //                     </span>\r\n    //                   ) : (\r\n    //                     \"\"\r\n    //                   )}\r\n    //                 </div>\r\n    //                 <div className=\"productActualPriceDiv\">\r\n    //                   <p\r\n    //                     className={\r\n    //                       discountPrice ? \"productActualPrice\" : \"actualPriceOnly\"\r\n    //                     }\r\n    //                   >\r\n    //                     {discountPrice ? \"Was  \" : \"\"} Rs.{price}\r\n    //                   </p>\r\n    //                 </div>\r\n    //                 {/* {products.reviewCount ? (\r\n    //                           <p className=\"productReviews\">\r\n    //                             Reviews(\r\n    //                             <a href=\"/\">{products.reviewCount}</a>)\r\n    //                           </p>\r\n    //                         ) : (\r\n    //                           \"\"\r\n    //                         )} */}\r\n    //               </div>\r\n    //             </Link>\r\n    //           );\r\n    //         }\r\n    //       )}\r\n    //     </ItemsCarousel>\r\n    //   </div>\r\n  );\r\n};\r\n\r\nexport default ProductsCarousel;\r\n","E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\Shared Components\\HomeCarousel.tsx",[],["102","103"],"E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\Shared Components\\Navbar.tsx",[],"E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\Shared Components\\Footer.tsx",[],"E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\Shared Components\\CategoriesMenu.tsx",[],"E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\Product\\Product.tsx",[],"E:\\Coding\\Web Development\\E-Store v1.1 - Copy\\root\\BackEnd\\FrontEnd\\src\\Shared Components\\ProductsCarousel1.tsx",["104"],"import React, { useState, useContext } from \"react\";\r\nimport Carousel, { slidesToShowPlugin } from \"@brainhubeu/react-carousel\";\r\nimport { DBProductsContext } from \"../contexts\";\r\nimport { DBProducts } from \"../interfaces\";\r\nimport \"@brainhubeu/react-carousel/lib/style.css\";\r\n\r\nconst ProductsCarousel1: React.FC = () => {\r\n  const DBProducts: DBProducts[] = useContext(DBProductsContext);\r\n\r\n  return (\r\n    <>\r\n      <Carousel\r\n        plugins={[\r\n          \"arrows\",\r\n          \"infinite\",\r\n          {\r\n            resolve: slidesToShowPlugin,\r\n            options: {\r\n              numberOfSlides: 4,\r\n            },\r\n          },\r\n        ]}\r\n      >\r\n        {DBProducts.map(({ _id, productImageURL }) => {\r\n          return <img key={_id} src={productImageURL} alt=\"Product\" />;\r\n        })}\r\n      </Carousel>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductsCarousel1;\r\n",{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":12,"column":10,"nodeType":"111","messageId":"112","endLine":12,"endColumn":23},{"ruleId":"109","severity":1,"message":"113","line":12,"column":25,"nodeType":"111","messageId":"112","endLine":12,"endColumn":41},{"ruleId":"109","severity":1,"message":"114","line":29,"column":7,"nodeType":"111","messageId":"112","endLine":29,"endColumn":36},{"ruleId":"109","severity":1,"message":"115","line":32,"column":10,"nodeType":"111","messageId":"112","endLine":32,"endColumn":23},{"ruleId":"109","severity":1,"message":"116","line":32,"column":25,"nodeType":"111","messageId":"112","endLine":32,"endColumn":41},{"ruleId":"117","severity":1,"message":"118","line":65,"column":6,"nodeType":"119","endLine":65,"endColumn":8,"suggestions":"120"},{"ruleId":"109","severity":1,"message":"121","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":14},{"ruleId":"109","severity":1,"message":"122","line":8,"column":10,"nodeType":"111","messageId":"112","endLine":8,"endColumn":25},{"ruleId":"109","severity":1,"message":"123","line":8,"column":27,"nodeType":"111","messageId":"112","endLine":8,"endColumn":45},{"ruleId":"109","severity":1,"message":"124","line":9,"column":9,"nodeType":"111","messageId":"112","endLine":9,"endColumn":33},{"ruleId":"109","severity":1,"message":"125","line":12,"column":9,"nodeType":"111","messageId":"112","endLine":12,"endColumn":21},{"ruleId":"109","severity":1,"message":"126","line":13,"column":9,"nodeType":"111","messageId":"112","endLine":13,"endColumn":16},{"ruleId":"105","replacedBy":"127"},{"ruleId":"107","replacedBy":"128"},{"ruleId":"109","severity":1,"message":"129","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"@typescript-eslint/no-unused-vars","'subCategories' is assigned a value but never used.","Identifier","unusedVar","'setSubCategories' is assigned a value but never used.","'brandIds' is assigned a value but never used.","'brandsForSort' is assigned a value but never used.","'setBrandsForSort' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'DBCategories.length', 'filterCurrentCategory', and 'getCurrentCategory'. Either include them or remove the dependency array.","ArrayExpression",["132"],"'Link' is defined but never used.","'activeItemIndex' is assigned a value but never used.","'setActiveItemIndex' is assigned a value but never used.","'DBProducts' is assigned a value but never used.","'chevronWidth' is assigned a value but never used.","'chevron' is assigned a value but never used.",["130"],["131"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},"Update the dependencies array to be: [DBCategories.length, filterCurrentCategory, getCurrentCategory]",{"range":"135","text":"136"},[2215,2217],"[DBCategories.length, filterCurrentCategory, getCurrentCategory]"]